export default {
Â  async fetch(request, env, ctx) {
Â  Â  if (request.method !== "GET") {
Â  Â  Â  return new Response(JSON.stringify({ error: "Only GET requests allowed" }, null, 2), {
Â  Â  Â  Â  status: 405,
Â  Â  Â  Â  headers: { "Content-Type": "application/json" },
Â  Â  Â  });
Â  Â  }

Â  Â  const url = new URL(request.url);
Â  Â  const instagramUrl = url.searchParams.get("url");

Â  Â  if (!instagramUrl) {
Â  Â  Â  return new Response(JSON.stringify({ error: "No Instagram URL provided" }, null, 2), {
Â  Â  Â  Â  status: 400,
Â  Â  Â  Â  headers: { "Content-Type": "application/json" },
Â  Â  Â  });
Â  Â  }

Â  Â  const apiUrl = `https://jerrycoder.oggyapi.workers.dev/insta?url=${encodeURIComponent(instagramUrl)}`;

Â  Â  try {
Â  Â  Â  const response = await fetch(apiUrl);

Â  Â  Â  if (!response.ok) {
Â  Â  Â  Â  const errorText = await response.text();
Â  Â  Â  Â  console.error("Instagram API Error:", errorText);
Â  Â  Â  Â  return new Response(
Â  Â  Â  Â  Â  JSON.stringify({ error: "Failed to fetch Instagram video", details: errorText }, null, 2),
Â  Â  Â  Â  Â  { status: 500, headers: { "Content-Type": "application/json" } }
Â  Â  Â  Â  );
Â  Â  Â  }

Â  Â  Â  const jsonData = await response.json();

Â  Â  Â  const customData = {
Â  Â  Â  Â  status: "success ðŸŸ¢",
Â  Â  Â  Â  result: jsonData.data || [],
Â  Â  Â  Â  join: "OGGY_WORKSHOP on Telegram",
Â  Â  Â  Â  support: "@OGGY_WORKSHOP",
Â  Â  Â  };

Â  Â  Â  return new Response(JSON.stringify(customData, null, 2), {
Â  Â  Â  Â  status: 200,
Â  Â  Â  Â  headers: { "Content-Type": "application/json" },
Â  Â  Â  });

Â  Â  } catch (error) {
Â  Â  Â  console.error("Fetch Error:", error);
Â  Â  Â  return new Response(
Â  Â  Â  Â  JSON.stringify({ error: "Failed to fetch Instagram video", details: error.message }, null, 2),
Â  Â  Â  Â  { status: 500, headers: { "Content-Type": "application/json" } }
Â  Â  Â  );
Â  Â  }
Â  }
}
